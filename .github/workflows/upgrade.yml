name: upgrade

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '.github/workflows/doc.yml'
      - 'doc/**'
      - 'mkdocs.yml'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '.github/workflows/doc.yml'
      - 'doc/**'
      - 'mkdocs.yml'

jobs:
  test:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        include:
          -
            php-version: 8.0
            name: Unit
            database: mariadb:10.5
          -
            php-version: 7.4
            name: Unit
            database: mysql:5.7
          -
            php-version: 7.3
            name: Unit
            database: mysql:8.0
    services:
      database:
        image: ${{ matrix.database }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: librenms_phpunit_78hunjuybybh
          MYSQL_USER: librenms
          MYSQL_PASSWORD: librenms
        ports:
          - 3306
    steps:
      -
        name: Checkout (master)
        uses: actions/checkout@v3
        with:
          ref: 'master'
      -
         name: Set $PATH
         run: |
           echo "/home/runner/.local/bin/" >> $GITHUB_PATH
      -
        name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer,php-cs-fixer
      -
        name: Get composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      -
        name: Cache composer
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ secrets.CACHE_VERSION }}-
      -
        name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-
      -
        name: Install packages
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y fping python3-pip python3-setuptools snmp
      -
        name: Init env
        run: |
          cat > .env <<EOL
          APP_KEY=base64:vHI+YHgkyCDad31iPEErGSNEOWO21wNzV+zyENKQv04=
          APP_URL=http://127.0.0.1:8000
          APP_ENV=testing
          DB_DRIVER=mysql
          DB_HOST=127.0.0.1
          DB_PORT=${{ job.services.database.ports[3306] }}
          DB_DATABASE=librenms_phpunit_78hunjuybybh
          DB_USERNAME=librenms
          DB_PASSWORD=librenms
          DB_TEST_DRIVER=mysql
          DB_TEST_HOST=127.0.0.1
          DB_TEST_PORT=${{ job.services.database.ports[3306] }}
          DB_TEST_DATABASE=librenms_phpunit_78hunjuybybh
          DB_TEST_USERNAME=librenms
          DB_TEST_PASSWORD=librenms
          EOL
      -
        name: Copy seeded config
        run: cp "${GITHUB_WORKSPACE}/tests/testing_config.yaml" "${GITHUB_WORKSPACE}/database/seeders/config/"
      -
        name: Ensure MySQL is up
        env:
          PORT: ${{ job.services.database.ports[3306] }}
        run: |
          mysqladmin -h"127.0.0.1" -P"$PORT" --user=librenms --password=librenms ping --wait=5
      -
        name: Set MySQL authentication plugin
        if: matrix.database == 'mysql:8.0'
        env:
          PORT: ${{ job.services.database.ports[3306] }}
        run: |
          mysql -h"127.0.0.1" -P"$PORT" --user=root -e "ALTER USER 'librenms'@'%' IDENTIFIED WITH mysql_native_password BY 'librenms'"
      -
        name: Set MySQL collate
        env:
          PORT: ${{ job.services.database.ports[3306] }}
        run: |
          mysql -h"127.0.0.1" -P"$PORT" --user=librenms --password=librenms -e 'ALTER DATABASE librenms_phpunit_78hunjuybybh CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;'

      -
        name: Composer install (master)
        run: |
          composer install --prefer-dist --no-interaction --no-progress

      -
        name: Migrate database (master)
        run: |
           ./lnms migrate --no-interaction --force --seed

      -
        name: Checkout (PR)
        uses: actions/checkout@v3

      -
        name: Run daily.sh
        run: |
          ./daily.sh post-pull master pr

      -
        name: Migrate database (PR)
        run: |
           ./lnms migrate --no-interaction --force --seed

      -
        name: Validate
        run: |
           ./validate.php | grep --context=99999999 FAIL && exit 1 || exit 0
