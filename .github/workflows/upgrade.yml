name: Upgrade

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '.github/workflows/doc.yml'
      - 'doc/**'
      - 'mkdocs.yml'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '.github/workflows/doc.yml'
      - 'doc/**'
      - 'mkdocs.yml'

jobs:
  Upgrade:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          -
            os: ubuntu-22.04
            librenms-version: "21.2.0"
            php-version: 8.0
            database: mariadb:10.5
          -
            os: ubuntu-22.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mariadb:10.5

          -
            os: ubuntu-22.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mariadb:10.4

          -
            os: ubuntu-22.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mariadb:10.3

          -
            os: ubuntu-22.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mariadb:10.2

          -
            os: ubuntu-22.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mariadb:10.0

          -
            os: ubuntu-22.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mariadb:5.5

          -
            os: ubuntu-22.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mysql:8.0

          -
            os: ubuntu-22.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mysql:5.7

          -
            os: ubuntu-18.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mysql:8.0

          -
            os: ubuntu-20.04
            librenms-version: "1.64"
            php-version: 7.4
            database: mysql:8.0
          -
            os: ubuntu-18.04
            librenms-version: "1.40"
            php-version: 7.3
            database: mysql:5.7
    services:
      database:
        image: ${{ matrix.database }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: librenms_phpunit_78hunjuybybh
          MYSQL_USER: librenms
          MYSQL_PASSWORD: librenms
        ports:
          - 3306
    steps:
      -
        name: Checkout (${{ matrix.librenms-version }})
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.librenms-version }}
      -
         name: Set $PATH
         run: |
           echo "/home/runner/.local/bin/" >> $GITHUB_PATH
      -
        name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer,php-cs-fixer
          coverage: none
      -
        name: Get composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      -
        name: Cache composer
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ secrets.CACHE_VERSION }}-
      -
        name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-
      -
        name: Install packages
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y fping python3-pip python3-setuptools snmp rrdtool
      -
        name: Pip install
        run: |
          python3 -m pip install --upgrade pip
      -
        name: Init env
        run: |
          cat > .env <<EOL
          APP_KEY=base64:vHI+YHgkyCDad31iPEErGSNEOWO21wNzV+zyENKQv04=
          APP_URL=http://127.0.0.1:8000
          APP_ENV=testing
          DB_DRIVER=mysql
          DB_HOST=127.0.0.1
          DB_PORT=${{ job.services.database.ports[3306] }}
          DB_DATABASE=librenms_phpunit_78hunjuybybh
          DB_USERNAME=librenms
          DB_PASSWORD=librenms
          DB_TEST_DRIVER=mysql
          DB_TEST_HOST=127.0.0.1
          DB_TEST_PORT=${{ job.services.database.ports[3306] }}
          DB_TEST_DATABASE=librenms_phpunit_78hunjuybybh
          DB_TEST_USERNAME=librenms
          DB_TEST_PASSWORD=librenms
          LIBRENMS_USER=runner
          LIBRENMS_GROUP=docker
          EOL

      -
        name: Init config.php
        run: |
          cat > config.php <<EOL
          <?php
          \$config['db_host'] = '127.0.0.1';
          \$config['db_user'] = 'librenms';
          \$config['db_pass'] = 'librenms';
          \$config['db_name'] = 'librenms_phpunit_78hunjuybybh';
          \$config['db_port'] = ${{ job.services.database.ports[3306] }};
          \$config['user'] = 'runner';
          EOL

      -
        name: Ensure MySQL is up
        env:
          PORT: ${{ job.services.database.ports[3306] }}
        run: mysqladmin -h"127.0.0.1" -P"$PORT" --user=librenms --password=librenms ping --wait=5
      -
        name: Set MySQL authentication plugin
        if: matrix.database == 'mysql:8.0'
        env:
          PORT: ${{ job.services.database.ports[3306] }}
        run: mysql -h"127.0.0.1" -P"$PORT" --user=root -e "ALTER USER 'librenms'@'%' IDENTIFIED WITH mysql_native_password BY 'librenms'"
      -
        name: Set MySQL collate
        env:
          PORT: ${{ job.services.database.ports[3306] }}
        run: mysql -h"127.0.0.1" -P"$PORT" --user=librenms --password=librenms -e 'ALTER DATABASE librenms_phpunit_78hunjuybybh CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;'

      -
        name: Setup LibreNMS (${{ matrix.librenms-version }})
        run: |
          chmod 775 /home/runner/work/librenms/librenms/rrd
          sudo ln -s /home/runner/work/librenms/librenms/lnms /usr/local/bin/lnms
          sudo cp /home/runner/work/librenms/librenms/misc/librenms.logrotate /etc/logrotate.d/librenms

      -
        name: Composer install (${{ matrix.librenms-version }})
        run: composer install --prefer-dist --no-interaction --no-progress --no-dev

      -
        name: Run update.php (${{ matrix.librenms-version }}) REMOVE ME
        run: php includes/sql-schema/update.php

      -
        name: Run daily.sh (${{ matrix.librenms-version }})
        run: ./daily.sh post-pull 0 ${{ matrix.librenms-version }}

      -
        name: Validate (${{ matrix.librenms-version }})
        continue-on-error: true
        run: |
          VALIDATE=$(./validate.php)
          echo "$VALIDATE"
          echo $VALIDATE | grep --quiet --invert-match FAIL

      -
        name: Checkout (master)
        uses: actions/checkout@v3
        with:
          ref: master
          clean: false

      -
        name: Setup LibreNMS (master)
        run: |
          sudo cp /home/runner/work/librenms/librenms/misc/lnms-completion.bash /etc/bash_completion.d/
          rm config.php

      -
        name: Composer install (${{ matrix.librenms-version }})
        run: composer install --prefer-dist --no-interaction --no-progress --no-dev

      -
        name: Run update.php (master) REMOVE ME
        run: php includes/sql-schema/update.php

      -
        name: Run daily.sh (master)
        run: ./daily.sh post-pull ${{ matrix.librenms-version }} master

      -
        name: Migration status (master)
        run: lnms migrate:status

      -
        name: Validate (master)
        continue-on-error: true
        run: |
          VALIDATE=$(./validate.php)
          echo "$VALIDATE"
          echo $VALIDATE | grep --quiet --invert-match FAIL

      -
        name: Checkout (PR)
        uses: actions/checkout@v3
        with:
          clean: false

      -
        name: Composer install (${{ matrix.librenms-version }})
        run: composer install --prefer-dist --no-interaction --no-progress --no-dev


      -
        name: Run update.php (PR) REMOVE ME
        run: php includes/sql-schema/update.php

      -
        name: Run daily.sh (PR)
        run: ./daily.sh post-pull master pr

      -
        name: Migration status (PR)
        run: lnms migrate:status

      -
        name: Validate (PR)
        run: |
          VALIDATE=$(./validate.php)
          echo "$VALIDATE"
          echo $VALIDATE | grep --quiet --invert-match FAIL

      -
        name: Rollback database (PR)
        run: lnms migrate:rollback --no-interaction --force

      -
        name: Checkout (master)
        uses: actions/checkout@v3
        with:
          ref: master
          clean: false

      -
        name: Run daily.sh (master)
        run: ./daily.sh post-pull pr master

      -
        name: Migration status (master)
        run: lnms migrate:status

      -
        name: Validate (master)
        run: |
          VALIDATE=$(./validate.php)
          echo "$VALIDATE"
          php artisan tinker --execute="dump(\LibreNMS\DB\Schema::getUnexpectedMigrations())"
          echo "--update.php--"
          php includes/sql-schema/update.php
          echo "-!-update.php-!-"
          php artisan tinker --execute="dump(\LibreNMS\DB\Schema::getUnexpectedMigrations())"
          echo "----artisan migrate---"
          lnms migrate --no-interaction --force
          echo "----!artisan migrate!---"
          echo $VALIDATE | grep --quiet --invert-match FAIL
