name: Lint
on:
  push:
  pull_request:
    branches: [master, main]

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  super-linter:
    permissions:
      contents: read # to fetch code (actions/checkout)
      checks: write # to mark the status of each individual linter run

    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            /*
            !/tests/data/
            !/tests/snmpsim/
            !/mibs/

      -
        name: Lint Code Base
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          VALIDATE_BASH: true
          # VALIDATE_PHP_BUILTIN: true # temp disable until it supports PHP 8.1
          VALIDATE_PYTHON_PYLINT: true
          VALIDATE_PYTHON_BLACK: true

          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  phpstan:
    name: PHP Static Analysis
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 10
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            /*
            !/doc/
            !/mibs/
            !/resources/definitions/os_*
            !/tests/data/
            !/tests/snmpsim/

      -
        name: Get all new PHP files
        id: changed-files
        uses: jellyfrog/changed-files@feature/any_added # TODO: tj-actions/changed-files@v47
        with:
          files: |
            app/**.php
            bootstrap/**.php
            config/**.php
            database/**.php
            LibreNMS/**.php
            resources/**.php
            routes/**.php
            tests/**.php

      -
        name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      -
        name: Cache composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ secrets.CACHE_VERSION }}-

      -
        name: Composer install
        run: composer install --prefer-dist --no-interaction --no-progress --no-scripts

      -
        name: PHPStan (new files)
        if: steps.changed-files.outputs.any_added == 'true'
        run: ./vendor/bin/phpstan analyze --no-interaction --level=7 -- ${{ steps.changed-files.outputs.added_files }}

      -
        name: PHPStan
        run: ./vendor/bin/phpstan analyze --no-interaction

      -
        name: PHPStan (Deprecated functions)
        run: ./vendor/bin/phpstan analyze --no-interaction --configuration=phpstan-deprecated.neon
